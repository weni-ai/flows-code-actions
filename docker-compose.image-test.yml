services:
  # MongoDB para testes
  mongo:
    image: mongo:7
    container_name: codeactions-mongo-image-test
    environment:
      MONGO_INITDB_DATABASE: codeactions_test
    networks:
      - image-test-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 10s

  # Redis para testes
  redis:
    image: redis:7-alpine
    container_name: codeactions-redis-image-test
    networks:
      - image-test-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 5s

  # Aplicação principal (será buildada)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: codeactions-app
    container_name: codeactions-app-image-test
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - FLOWS_CODE_ACTIONS_MONGODB=mongodb://mongo:27017/codeactions_test
      - FLOWS_CODE_ACTIONS_REDIS=redis://redis:6379/1
      - FLOWS_CODE_ACTIONS_HTTP_PORT=8050
      - FLOWS_CODE_ACTIONS_ENVIRONMENT=test
    ports:
      - "8050:8050"
    networks:
      - image-test-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8050/health"]
      interval: 5s
      timeout: 3s
      retries: 15
      start_period: 20s

networks:
  image-test-network:
    driver: bridge 